<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.pyyh.ms.manager.business.dao.IModularMenuRoleDao">
	<select id="modularMenuRoleExists" parameterType = "com.pyyh.ms.manager.business.pojos.ModularMenuRolePojo" resultType = "Integer">
		select exists(select 1 from tb_role_modular where roleIndex = ${roleIndex} and modularIndex = ${modularIndex} and organizationIndex = ${organizationIndex})
	</select>
	<insert id="modularMenuRoleAdd" parameterType = "com.pyyh.ms.manager.business.pojos.ModularMenuRolePojo" useGeneratedKeys = "true" keyProperty = "id">
		insert into tb_role_modular(roleIndex, modularIndex, organizationIndex) values(${roleIndex}, ${modularIndex}, ${organizationIndex})
	</insert>
	<delete id="modularMenuRoleDelete" parameterType = "com.pyyh.ms.manager.business.pojos.ModularMenuRolePojo">
		delete from tb_role_modular where roleIndex = ${roleIndex} and modularIndex = ${modularIndex} and organizationIndex = ${organizationIndex}
	</delete>
	<select id = "modularMenuRoleFind" parameterType = "com.pyyh.ms.manager.business.pojos.ModularMenuRolePojo" resultType = "com.pyyh.ms.manager.business.pojos.ModularMenuPojo">
		select tb_modularmenu.id, tb_modularmenu.modularName,tb_modularmenu.parentId,tb_modularmenu.modularLevel,
			tb_modularmenu.modularIndex,tb_modularmenu.url,tb_modularmenu.icon,tb_modularmenu.uiName,tb_modularmenu.isAction 
		from tb_role_modular 
		left join tb_modularmenu on tb_role_modular.modularIndex = tb_modularmenu.id
		where tb_role_modular.roleIndex in 
		<foreach collection="roleIndexes" index = "index" item = "item" open = "(" separator = "," close = ")">
			${item}
		</foreach>
	</select>
</mapper>